RDB
概述：在指定的时间间隔内将内存中的数据集快照写入磁盘，也就是行话讲得snapshot快照，它恢复时是将快照文件直接读到内存中。

备份如何执行：
Redis会单独创建（fork）一个子进程来进行持久化，先将数据写入到临时文件中，待持久化过程都结束了，再用这个临时文件替换上次持久化好的文件。
整个过程中，主进程是不进行任何IO操作的，这就确保了极高的性能如果需要进行大规模数据的恢复，且对于数据恢复的完整性不是非常敏感，那RDB方式要比AOF方式更加的高效。
RDB的缺点只最后一次持久化的数据可能丢失。

RDB的优点：
1.节省磁盘空间
2.恢复速度快

RDB的缺点：
1.虽然Redis在fork时使用了写时拷贝技术，但是如果数据庞大时还是比较消耗性能。
2.在备份周期在一定间隔时间做一次备份，所以如果Redis以为down掉的话，就会丢失最后一次快照后的所有修改。

----------------------------------------------------------------------------------------------------------------------------------------

AOF概述：
以日志的形式来记录每个写操作，将Redis执行过的所有写指令记录下来(读操作不记录)，只许追加文件但不可以改写文件，
Redis启动之初会读取该文件重新构建数据，换言之，Redis重启的话就根据日志文件的内容将写指令从前到后执行一-次以完成数据的恢复工作。

何时重写：
重写虽然可以节约大量磁盘空间， 减少恢复时间。但是每次重写还是有一定的负担的，因此设定Redis要满足一定条件才会进行重写。
系统载入时或者上次重写完毕时，Redis会记录此时AOF大小，设为base size,，如果Redis的AOF当前大小>= base size+base_ size*100%
(默认)且当前大小>=64mb(默认)的情况下,Redis会对AOF进行重写。   rewrite:去掉中中间过程-计算保留最终数据效果

AOF的优点:
1.备份机制更稳健，丢失数据概率更低
2.可读的日志文本，通过操作AOF文件，可以处理误操作。


AOP的缺点：
1.比起RDB占用更多的磁盘空间---因为会产生很多的操作日志文件。但是有一个rewrite操作。当前大小>=64mb(默认)的情况下,Redis会对AOF进行重写。   rewrite:去掉中中间过程
2.恢复速度要慢。
3.每次读写都同步的话，有一定的性能压力
4.存在个别BUG，造成数据不能恢复


https://www.cnblogs.com/chenliangcl/p/7240350.html



redis 4.x版本之后内部是混合持久化模式。

打开混合模式之后：
1.清空缓存文件RDB或者AOF  做一次全量的RDB
后续再做操作的时候，记录在AOF中。等到文件达到阈值的时候，又rewrite 节省磁盘空间，再RDB快照。



